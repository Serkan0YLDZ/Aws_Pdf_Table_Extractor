plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.node-gradle.node' version '7.0.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

// Node.js configuration
node {
	version = "20.18.0"
	npmVersion = "10.8.2"
	download = true
	workDir = file("${project.projectDir}/.gradle/nodejs")
	npmWorkDir = file("${project.projectDir}/.gradle/npm")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Frontend build tasks using Node.js plugin
task npmInstallFrontend(type: com.github.gradle.node.npm.task.NpmTask) {
	workingDir = file("${project.projectDir}/frontend")
	args = ['install']
}

task buildFrontend(type: com.github.gradle.node.npm.task.NpmTask) {
	dependsOn npmInstallFrontend
	workingDir = file("${project.projectDir}/frontend")
	args = ['run', 'build']
}

task copyFrontend(type: Copy) {
	dependsOn buildFrontend
	from 'frontend/dist'
	into 'src/main/resources/static'
}

processResources {
	dependsOn copyFrontend
}

jar {
	enabled = false
}